'''
Давайте опишем пару сущностей player и enemy через словарь, который будет
иметь ключи и значения:
name — строка, полученная от пользователя,
health = 100,
damage = 50.
Поэкспериментируйте с значениями урона и жизней по желанию.
Теперь надо создать функцию attack(person1, person2).
Примечание: имена аргументов можете указать свои.
Функция в качестве аргумента будет принимать атакующего и атакуемого.
В теле функция должна получить параметр damage атакующего и отнять это
количество от health атакуемого.
Функция должна сама работать со словарями и изменять их значения.

От себя:
- атака повторяется, пока здоровье атакуемого игрока не станет отрицательным
- сила урона корректируется на случайную величину каждый ход

'''
import random

player = {"name":"", "health": 100, "damage":50 }
enemy = {"name":"", "health": 100, "damage":50 }

def tryluck(): #увеличиваем, либо уменьшаем урон случайным образом
    coef = (random.randint(0,200)) / 100
    dam = enemy["damage"]
    if(coef > 1):
        print(f"Везет сильнейшим! Урон будет увеличен на  {(coef*100)-100}% от базового ({dam}).")
    else:
        print(f"Небеса сегодня благосклонны к жертве. Урон будет уменьшен на {coef*100}% от базового  ({dam})")
    return coef


def atack(victim, hunter):
    damage = hunter["damage"] * tryluck()
   
    print(f'У жертвы было {victim["health"]} единиц здоровья')
    victim["health"] -= damage
    print(f"Урон составил: {damage}")
    print(f'У жертвы стало {victim["health"]} единиц здоровья')


player["name"] = input("Задайте имя атакуемого: ").capitalize()
enemy["name"] = input("Задайте имя атакующего: ").capitalize()

counter = 0
while player["health"] > 0:
    counter+=1
    print(f'Ход №{counter}')
    print("-" * 100)
    atack(player, enemy)
    
else:
    print(f'Жертва по имени {player["name"]} была убита за {counter} ходов')

